{% extends 'base.html.twig' %}

{% block title %}Commander {{ vehicule.brand }} {{ vehicule.model }} - Quernel Auto{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/orders.css') }}">
    <link rel="stylesheet" href="{{ asset('css/payment.css') }}">
{% endblock %}

{% block body_class %}order-page-new{% endblock %}

{% block body %}
<div class="order-container">
    <header class="order-header">
        <h1>Finaliser ma commande</h1>
    </header>

    <div class="order-content">
        <!-- Étape 1: Récapitulatif du Véhicule -->
        <section class="order-step">
            <div class="step-header">
                <span class="step-number">1</span>
                <h2 class="step-title">Votre véhicule</h2>
            </div>
            <div class="summary-vehicule">
                <div class="summary-vehicule-image">
                    {% if vehicule.pictures is not empty %}
                        <img src="{{ asset('uploads/vehicules/' ~ vehicule.pictures.first.name) }}" alt="{{ vehicule.brand }} {{ vehicule.model }}">
                    {% else %}
                        <div class="no-image"><i class="fas fa-car-side"></i></div>
                    {% endif %}
                </div>
                <div class="summary-vehicule-details">
                    <h4>{{ vehicule.brand }} {{ vehicule.model }}</h4>
                    <p class="year">{{ vehicule.year|date('Y') }}</p>
                    <div class="summary-vehicule-specs">
                        <span class="spec"><i class="fas fa-tachometer-alt"></i>{{ vehicule.mileage|number_format(0, ',', ' ') }} km</span>
                        <span class="spec"><i class="fas fa-gas-pump"></i>{{ vehicule.fuelType }}</span>
                        <span class="spec"><i class="fas fa-cogs"></i>{{ vehicule.trasmission }}</span>
                        <span class="spec"><i class="fas fa-palette"></i>{{ vehicule.color }}</span>
                    </div>
                    <p class="summary-price">{{ vehicule.salePrice|number_format(2, ',', ' ')|replace({',00':''}) }} €</p>
                </div>
            </div>
        </section>

        {{ form_start(form) }}
            <!-- Étape 2: Informations de Livraison -->
            <section class="order-step">
                <div class="step-header">
                    <span class="step-number">2</span>
                    <h2 class="step-title">Adresse de livraison</h2>
                </div>
                {{ form_errors(form) }}
                <div class="form-row">
                    <div class="form-group" style="grid-column: 1 / -1;">
                        {{ form_label(form.deliveryAdress) }}
                        {{ form_widget(form.deliveryAdress) }}
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        {{ form_label(form.deliveryPostalCode) }}
                        {{ form_widget(form.deliveryPostalCode) }}
                    </div>
                    <div class="form-group">
                        {{ form_label(form.deliveryCity) }}
                        {{ form_widget(form.deliveryCity) }}
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group" style="grid-column: 1 / -1;">
                        {{ form_label(form.deliveryCountry) }}
                        {{ form_widget(form.deliveryCountry) }}
                    </div>
                </div>
            </section>

            <!-- Étape 3: Paiement -->
            <section class="order-step">
                <div class="step-header">
                    <span class="step-number">3</span>
                    <h2 class="step-title">Paiement</h2>
                </div>
                <div class="payment-actions">
                    <div id="apple-pay-button" style="display: none;">
                        <button type="button" class="btn-payment" id="apple-pay-button"><i class="fab fa-apple"></i> Payer avec Apple Pay</button>
                    </div>
                    <button type="submit" class="btn-payment" id="stripe-pay-button"><i class="fas fa-credit-card"></i> Payer par carte</button>
                </div>
                <a href="{{ path('app_vehicules_show', {'id': vehicule.id}) }}" class="back-link-order">Retour au véhicule</a>
            </section>
        {{ form_end(form) }}
    </div>
</div>

<!-- Loading overlay -->
<div id="loadingOverlay" class="loading-overlay" style="display: none;">
    <div class="loading-content">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Chargement...</span>
        </div>
        <p>Traitement du paiement en cours...</p>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        // Initialiser Stripe
        const stripe = Stripe('{{ stripe_public_key }}');
        let applePaySupported = false;
        const vehiculeData = {
            id: {{ vehicule.id }},
            brand: '{{ vehicule.brand }}',
            model: '{{ vehicule.model }}',
            price: {{ vehicule.salePrice }}, // en centimes
            priceFormatted: '{{ (vehicule.salePrice / 100)|number_format(2, ',', ' ') }} €'
        };

        // Vérifier si Apple Pay est disponible
        function checkApplePayAvailability() {
            if (window.ApplePaySession && ApplePaySession.canMakePayments()) {
                applePaySupported = true;
                document.getElementById('apple-pay-button').style.display = 'block';
            }
        }

        // Initialiser Apple Pay pour l'achat direct
        function initializeApplePayForPurchase() {
            const paymentRequest = stripe.paymentRequest({
                country: 'FR',
                currency: 'eur',
                total: {
                    label: 'Quernel Auto - ' + vehiculeData.brand + ' ' + vehiculeData.model,
                    amount: vehiculeData.price, // en centimes
                },
                requestPayerName: true,
                requestPayerEmail: true,
                requestPayerPhone: true,
                requestShipping: true,
            });

            // Gérer la confirmation du paiement
            paymentRequest.on('paymentmethod', async (event) => {
                try {
                    showLoading();
                    
                    // Créer la commande et le PaymentIntent
                    const response = await fetch('{{ path('app_orders_create_with_apple_pay') }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify({
                            vehicule_id: vehiculeData.id,
                            payment_method: event.paymentMethod.id,
                            shipping_address: event.paymentMethod.billing_details,
                            delivery_address: event.paymentMethod.shipping_address
                        })
                    });

                    const data = await response.json();
                    
                    if (data.error) {
                        throw new Error(data.error);
                    }

                    // Confirmer le paiement
                    const {error: confirmError} = await stripe.confirmCardPayment(
                        data.client_secret,
                        {
                            payment_method: event.paymentMethod.id,
                        },
                        {
                            handleActions: false,
                        }
                    );

                    if (confirmError) {
                        throw new Error(confirmError.message);
                    }

                    // Paiement réussi
                    hideLoading();
                    window.location.href = '{{ path('app_vehicules_purchase_success') }}?vehicule_id=' + vehiculeData.id;

                } catch (error) {
                    console.error('Erreur Apple Pay:', error);
                    hideLoading();
                    showError('Erreur lors du paiement Apple Pay: ' + error.message);
                }
            });

            // Gérer les erreurs
            paymentRequest.on('cancel', () => {
                console.log('Paiement Apple Pay annulé');
                hideLoading();
            });

            return paymentRequest;
        }

        // Fonction pour initier Apple Pay
        function initiateApplePayPurchase() {
            const paymentRequest = initializeApplePayForPurchase();
            
            if (paymentRequest) {
                paymentRequest.show();
            } else {
                showError('Apple Pay n\'est pas disponible sur votre appareil');
            }
        }

        // Fonction pour afficher le loading
        function showLoading() {
            document.getElementById('loadingOverlay').style.display = 'flex';
        }

        // Fonction pour masquer le loading
        function hideLoading() {
            document.getElementById('loadingOverlay').style.display = 'none';
        }

        // Fonction pour afficher les erreurs
        function showError(message) {
            const alertDiv = document.createElement('div');
            alertDiv.className = 'alert alert-danger alert-dismissible fade show';
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;
            
            const container = document.querySelector('.form-container');
            container.insertBefore(alertDiv, container.firstChild);
        }

        // Initialiser au chargement de la page
        document.addEventListener('DOMContentLoaded', function() {
            checkApplePayAvailability();
        });

        // ... existing code ... */
        if (result.error) {
            showError(result.error.message);
        } else {
            window.location.href = result.success_url;
        }
    </script>
{% endblock %} 