{# Template de paiement de commande de Quernel Auto #}
{# Cette page permet aux utilisateurs de payer leur commande via Stripe #}
{# Elle inclut : résumé commande, Apple Pay, Stripe, sécurité, gestion des erreurs #}
{% extends 'base.html.twig' %}

{# Titre dynamique avec numéro de commande pour le SEO #}
{% block title %}Paiement - Commande #{{ order.id }} - Quernel Auto{% endblock %}

{# Feuilles de style spécifiques au paiement #}
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/payment.css') }}">
{% endblock %}

{# Métadonnées spécifiques pour Apple Pay #}
{% block head %}
    {# Métadonnées pour Apple Pay #}
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="apple-mobile-web-app-title" content="Quernel Auto">
    
    {# Icône Apple Pay #}
    <link rel="apple-touch-icon" href="{{ asset('images/logo_quernel_auto.png') }}">
{% endblock %}

{# Contenu principal de la page de paiement #}
{% block body %}
    <div class="payment-container">
        {# En-tête de la page de paiement #}
        <div class="payment-header">
            <h1>Paiement de la commande</h1>
            <p>Finalisez votre achat en toute sécurité avec Stripe</p>
        </div>

        {# Affichage des messages flash (erreurs, succès, avertissements) #}
        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label == 'error' ? 'danger' : label == 'warning' ? 'warning' : 'success' }} alert-dismissible fade show" role="alert">
                    {{ message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            {% endfor %}
        {% endfor %}

        {# Contenu principal du paiement #}
        <div class="payment-content">
            {# Résumé de la commande #}
            <div class="order-summary">
                <div class="order-card">
                    {# En-tête de la commande avec statut #}
                    <div class="order-header">
                        <h3>Commande #{{ order.id }}</h3>
                        <span class="order-status status-pending">En attente de paiement</span>
                    </div>
                    
                    {# Détails de la commande #}
                    <div class="order-details">
                        {# Informations générales de la commande #}
                        <div class="order-info">
                            <p><strong>Date de commande :</strong> {{ order.createdAt|date('d/m/Y H:i') }}</p>
                            <p><strong>Description :</strong> {{ order.description ?? 'Commande de véhicule' }}</p>
                            {# Informations du véhicule principal #}
                            {% set vehicule = order.vehicules|first %}
                            {% if vehicule %}
                                <p><strong>Véhicule :</strong> {{ vehicule.brand }} {{ vehicule.model }}</p>
                                <p><strong>Année :</strong> {{ vehicule.year ? vehicule.year|date('Y') : 'N/A' }}</p>
                                <p><strong>Carburant :</strong> {{ vehicule.fuelType }}</p>
                            {% endif %}
                        </div>
                        
                        {# Montant total de la commande #}
                        <div class="order-amount">
                            <span class="amount">{{ (order.totalPrice / 100)|number_format(2, ',', ' ') }} €</span>
                        </div>
                    </div>
                </div>
            </div>

            {# Section de paiement #}
            <div class="payment-section">
                <div class="payment-card">
                    {# En-tête avec méthodes de paiement acceptées #}
                    <div class="payment-header">
                        <h3>Informations de paiement</h3>
                        <div class="payment-methods">
                            <i class="fab fa-cc-visa"></i>
                            <i class="fab fa-cc-mastercard"></i>
                            <i class="fab fa-cc-amex"></i>
                            <i class="fab fa-cc-paypal"></i>
                            <i class="fab fa-apple-pay"></i>
                        </div>
                    </div>
                    
                    {# Formulaire de paiement #}
                    <div class="payment-form">
                        {# Résumé des coûts #}
                        <div class="payment-summary">
                            <div class="summary-row">
                                <span>Sous-total :</span>
                                <span>{{ (order.totalPrice / 100)|number_format(2, ',', ' ') }} €</span>
                            </div>
                            <div class="summary-row">
                                <span>Frais de transaction :</span>
                                <span>0,00 €</span>
                            </div>
                            <div class="summary-row total">
                                <span>Total à payer :</span>
                                <span>{{ (order.totalPrice / 100)|number_format(2, ',', ' ') }} €</span>
                            </div>
                        </div>
                        
                        {# Boutons d'action de paiement #}
                        <div class="payment-actions">
                            {# Bouton Apple Pay (affiché conditionnellement) #}
                            <div id="apple-pay-button" class="apple-pay-button" style="display: none;">
                                <button type="button" class="btn btn-apple-pay">
                                    <i class="fab fa-apple"></i> Payer avec Apple Pay
                                </button>
                            </div>
                            
                            {# Bouton Stripe classique #}
                            <button type="button" class="btn btn-primary btn-pay-stripe" onclick="initiatePayment()">
                                <i class="fas fa-credit-card"></i> Payer avec Stripe
                            </button>
                            
                            {# Bouton de retour #}
                            <a href="{{ path('app_payment') }}" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left"></i> Retour aux commandes
                            </a>
                        </div>
                        
                        {# Informations de sécurité #}
                        <div class="payment-security">
                            <div class="security-info">
                                <i class="fas fa-shield-alt"></i>
                                <div>
                                    <strong>Paiement sécurisé</strong>
                                    <p>Vos informations de paiement sont protégées par le cryptage SSL et Stripe</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    {# Overlay de chargement pendant la redirection #}
    <div id="loadingOverlay" class="loading-overlay" style="display: none;">
        <div class="loading-content">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Chargement...</span>
            </div>
            <p>Redirection vers Stripe...</p>
        </div>
    </div>
{% endblock %}

{# Scripts JavaScript pour Stripe et Apple Pay #}
{% block javascripts %}
    {{ parent() }}
    {# SDK Stripe #}
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        {# Initialisation de Stripe avec la clé publique #}
        const stripe = Stripe('{{ stripe_public_key }}');
        let paymentRequest = null;
        let elements = null;
        let prElement = null;

        {# Vérification de la disponibilité d'Apple Pay #}
        function checkApplePayAvailability() {
            if (window.ApplePaySession && ApplePaySession.canMakePayments()) {
                {# Apple Pay est disponible, afficher le bouton #}
                document.getElementById('apple-pay-button').style.display = 'block';
                initializeApplePay();
            } else {
                {# Apple Pay n'est pas disponible, masquer le bouton #}
                document.getElementById('apple-pay-button').style.display = 'none';
            }
        }

        {# Initialisation d'Apple Pay #}
        function initializeApplePay() {
            const paymentRequest = stripe.paymentRequest({
                country: 'FR',
                currency: 'eur',
                total: {
                    label: 'Quernel Auto - Commande #{{ order.id }}',
                    amount: {{ order.totalPrice * 100 }}, {# Montant en centimes #}
                },
                requestPayerName: true,
                requestPayerEmail: true,
                requestPayerPhone: true,
                requestShipping: false,
            });

            {# Création de l'élément de bouton Apple Pay #}
            elements = stripe.elements();
            prElement = elements.create('paymentRequestButton', {
                paymentRequest,
                style: {
                    paymentRequestButton: {
                        type: 'buy', {# Type de bouton #}
                        theme: 'dark', {# Thème du bouton #}
                        height: '48px',
                    },
                },
            });

            {# Gestion de la confirmation du paiement Apple Pay #}
            paymentRequest.on('paymentmethod', async (event) => {
                try {
                    {# Création du PaymentIntent côté serveur #}
                    const response = await fetch('{{ path('app_create_payment_intent') }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: 'order_id={{ order.id }}'
                    });

                    const data = await response.json(); 