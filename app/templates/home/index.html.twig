{% extends 'base.html.twig' %}

{% block title %}Quernel Auto - Import/Export de véhicules{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/home.css') }}">
{% endblock %}

{% block body %}
    <!-- Section Hero -->
    <section class="hero">
        <div class="hero-content">
            <h1>QUERNEL AUTO</h1>
            <p>QUERNEL AUTO simplifie l'import-export de voitures, offrant des solutions fiables et transparentes pour l'achat et la vente de véhicules à l'international. Avec une expertise reconnue et un réseau mondial, nous vous accompagnons à chaque étape pour rendre vos transactions automobiles fluides et sécurisées.</p>
            <a href="#contact" class="cta-button">Remplir un formulaire</a>
        </div>
    </section>

    <!-- Section Services -->
    <section class="services">
        <h2>Nos Services</h2>
        <div class="services-grid">
            <div class="service-card">
                <i class="fas fa-car"></i>
                <h3>Import de Véhicules</h3>
                <p>Solutions personnalisées pour l'importation de véhicules de qualité</p>
            </div>
            <div class="service-card">
                <i class="fas fa-globe"></i>
                <h3>Export International</h3>
                <p>Expertise mondiale dans l'exportation de véhicules</p>
            </div>
            <div class="service-card">
                <i class="fas fa-handshake"></i>
                <h3>Accompagnement</h3>
                <p>Support complet tout au long du processus</p>
            </div>
        </div>
    </section>

    <!-- Section Processus -->
    <section class="process">
        <h2>Notre Processus d'Importation</h2>
        <div class="process-steps">
            {% for i in 1..4 %}
                <div class="step">
                    <img src="{{ asset('images/etape' ~ i ~ '.jpg') }}" alt="Étape {{ i }}">
                    <h3>Étape {{ i }}</h3>
                    <p>{{ {
                        1: 'Sélection du véhicule selon vos critères',
                        2: 'Vérification et inspection complète',
                        3: 'Transport sécurisé',
                        4: 'Livraison et formalités administratives'
                    }[i] }}</p>
                </div>
            {% endfor %}
        </div>
    </section>

    <!-- Section Véhicules Récents -->
    {% if recentVehicules is not empty %}
    <section class="recent-vehicles">
        <h2>Véhicules Récemment Importés</h2>
        <div class="carousel-container">
            <button class="carousel-btn carousel-btn-prev" id="prevBtn">
                <i class="fas fa-chevron-left"></i>
            </button>
            <div class="carousel-track" id="carouselTrack">
                {% for vehicule in recentVehicules %}
                    <div class="vehicle-card carousel-item" data-index="{{ loop.index0 }}">
                        {% if vehicule.pictures is not empty %}
                            <div class="vehicle-image">
                                <img src="{{ asset('uploads/vehicules/' ~ vehicule.pictures|first.name) }}" alt="{{ vehicule.brand }} {{ vehicule.model }}">
                            </div>
                        {% endif %}
                        <div class="vehicle-content">
                            <h3>{{ vehicule.brand }} {{ vehicule.model }}</h3>
                            <p class="vehicle-description">{{ vehicule.description|length > 100 ? vehicule.description|slice(0, 100) ~ '...' : vehicule.description }}</p>
                            <div class="vehicle-details">
                                <span class="vehicle-year">{{ vehicule.year ? vehicule.year|date('Y') : 'N/A' }}</span>
                                <span class="vehicle-fuel">{{ vehicule.fuelType }}</span>
                            </div>
                            <span class="price">{{ vehicule.salePrice|number_format(0, ',', ' ') }} €</span>
                            <a href="{{ path('app_vehicules_show', {'id': vehicule.id}) }}" class="view-details-btn">
                                Voir les détails
                            </a>
                        </div>
                    </div>
                {% endfor %}
            </div>
            <button class="carousel-btn carousel-btn-next" id="nextBtn">
                <i class="fas fa-chevron-right"></i>
            </button>
        </div>
        {% if recentVehicules|length > 1 %}
        <div class="carousel-dots" id="carouselDots">
            {% for vehicule in recentVehicules %}
                <button class="dot" data-index="{{ loop.index0 }}"></button>
            {% endfor %}
        </div>
        {% endif %}
    </section>
    {% endif %}

    <!-- Section Inscription -->
    <section id="contact" class="registration">
        <h2>Créez votre compte</h2>
        <div class="form-container">
            {{ form_start(registrationForm, {'attr': {'class': 'registration-form'}}) }}
                {% if not registrationForm.vars.valid %}
                    <div class="flash-message flash-error">
                        Veuillez corriger les erreurs ci-dessous
                    </div>
                {% endif %}
                
                <div class="form-row">
                    <div class="form-group">
                        {{ form_label(registrationForm.firstname) }}
                        {{ form_widget(registrationForm.firstname, {
                            'attr': {
                                'class': registrationForm.firstname.vars.valid ? '' : 'is-invalid'
                            }
                        }) }}
                        {{ form_errors(registrationForm.firstname) }}
                    </div>
                    <div class="form-group">
                        {{ form_label(registrationForm.lastname) }}
                        {{ form_widget(registrationForm.lastname, {
                            'attr': {
                                'class': registrationForm.lastname.vars.valid ? '' : 'is-invalid'
                            }
                        }) }}
                        {{ form_errors(registrationForm.lastname) }}
                    </div>
                </div>
                <div class="form-group">
                    {{ form_label(registrationForm.email) }}
                    {{ form_widget(registrationForm.email, {
                        'attr': {
                            'class': registrationForm.email.vars.valid ? '' : 'is-invalid'
                        }
                    }) }}
                    {{ form_errors(registrationForm.email) }}
                </div>
                <div class="form-group">
                    {{ form_label(registrationForm.password) }}
                    {{ form_widget(registrationForm.password, {
                        'attr': {
                            'class': registrationForm.password.vars.valid ? '' : 'is-invalid'
                        }
                    }) }}
                    {{ form_errors(registrationForm.password) }}
                </div>
                <div class="form-group">
                    {{ form_label(registrationForm.address) }}
                    {{ form_widget(registrationForm.address, {
                        'attr': {
                            'class': registrationForm.address.vars.valid ? '' : 'is-invalid'
                        }
                    }) }}
                    {{ form_errors(registrationForm.address) }}
                </div>
                <div class="form-row">
                    <div class="form-group">
                        {{ form_label(registrationForm.city) }}
                        {{ form_widget(registrationForm.city, {
                            'attr': {
                                'class': registrationForm.city.vars.valid ? '' : 'is-invalid'
                            }
                        }) }}
                        {{ form_errors(registrationForm.city) }}
                    </div>
                    <div class="form-group">
                        {{ form_label(registrationForm.postalCode) }}
                        {{ form_widget(registrationForm.postalCode, {
                            'attr': {
                                'class': registrationForm.postalCode.vars.valid ? '' : 'is-invalid'
                            }
                        }) }}
                        {{ form_errors(registrationForm.postalCode) }}
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        {{ form_label(registrationForm.country) }}
                        {{ form_widget(registrationForm.country, {
                            'attr': {
                                'class': 'form-select ' ~ (registrationForm.country.vars.valid ? '' : 'is-invalid')
                            }
                        }) }}
                        {{ form_errors(registrationForm.country) }}
                    </div>
                    <div class="form-group">
                        {{ form_label(registrationForm.phoneNumber) }}
                        {{ form_widget(registrationForm.phoneNumber, {
                            'attr': {
                                'class': registrationForm.phoneNumber.vars.valid ? '' : 'is-invalid'
                            }
                        }) }}
                        {{ form_errors(registrationForm.phoneNumber) }}
                    </div>
                </div>
                <button type="submit" class="submit-button">S'inscrire</button>
            {{ form_end(registrationForm) }}
        </div>
    </section>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Vérifier si les éléments existent
            const carouselTrack = document.getElementById('carouselTrack');
            const prevBtn = document.getElementById('prevBtn');
            const nextBtn = document.getElementById('nextBtn');
            const dots = document.querySelectorAll('.dot');
            const items = document.querySelectorAll('.carousel-item');
            
            // Si pas d'éléments, arrêter
            if (!carouselTrack || items.length === 0) {
                console.log('Carousel elements not found');
                return;
            }
            
            console.log('Carousel initialized with', items.length, 'items');
            
            let currentIndex = 0;
            const itemWidth = 380; // Largeur de l'item + gap
            const visibleItems = Math.floor(carouselTrack.offsetWidth / itemWidth);
            const maxIndex = Math.max(0, items.length - visibleItems);
            
            console.log('Visible items:', visibleItems, 'Max index:', maxIndex);
            
            // Initialisation
            updateCarousel();
            
            // Fonction pour mettre à jour le carrousel
            function updateCarousel() {
                console.log('Updating carousel, current index:', currentIndex);
                
                // Mettre à jour la position du track
                const translateX = -currentIndex * itemWidth;
                carouselTrack.style.transform = `translateX(${translateX}px)`;
                
                // Mettre à jour les classes active
                items.forEach((item, index) => {
                    item.classList.remove('active');
                    if (index >= currentIndex && index < currentIndex + visibleItems) {
                        item.classList.add('active');
                    }
                });
                
                // Mettre à jour les dots
                dots.forEach((dot, index) => {
                    dot.classList.remove('active');
                    if (index === currentIndex) {
                        dot.classList.add('active');
                    }
                });
                
                // Mettre à jour les boutons
                if (prevBtn) prevBtn.disabled = currentIndex === 0;
                if (nextBtn) nextBtn.disabled = currentIndex >= maxIndex;
            }
            
            // Événements des boutons
            if (prevBtn) {
                prevBtn.addEventListener('click', function() {
                    console.log('Previous button clicked');
                    if (currentIndex > 0) {
                        currentIndex--;
                        updateCarousel();
                    }
                });
            }
            
            if (nextBtn) {
                nextBtn.addEventListener('click', function() {
                    console.log('Next button clicked');
                    if (currentIndex < maxIndex) {
                        currentIndex++;
                        updateCarousel();
                    }
                });
            }
            
            // Événements des dots
            dots.forEach((dot, index) => {
                dot.addEventListener('click', function() {
                    console.log('Dot clicked:', index);
                    currentIndex = Math.max(0, Math.min(index, maxIndex));
                    updateCarousel();
                });
            });
            
            // Navigation au clavier
            document.addEventListener('keydown', function(e) {
                if (e.key === 'ArrowLeft' && currentIndex > 0) {
                    currentIndex--;
                    updateCarousel();
                } else if (e.key === 'ArrowRight' && currentIndex < maxIndex) {
                    currentIndex++;
                    updateCarousel();
                }
            });
            
            // Gestion du redimensionnement
            window.addEventListener('resize', function() {
                const newVisibleItems = Math.floor(carouselTrack.offsetWidth / itemWidth);
                const newMaxIndex = Math.max(0, items.length - newVisibleItems);
                
                if (currentIndex > newMaxIndex) {
                    currentIndex = newMaxIndex;
                }
                
                updateCarousel();
            });
        });
    </script>
{% endblock %} 