{% extends 'base.html.twig' %}

{% block title %}Commander {{ vehicule.brand }} {{ vehicule.model }} - Quernel Auto{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/orders.css') }}">
    <link rel="stylesheet" href="{{ asset('css/payment.css') }}">
{% endblock %}

{% block head %}
    <!-- Métadonnées pour Apple Pay -->
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="apple-mobile-web-app-title" content="Quernel Auto">
    
    <!-- Apple Pay Domain Association -->
    <link rel="apple-touch-icon" href="{{ asset('images/logo_quernel_auto.png') }}">
{% endblock %}

{% block body %}
<div class="form-container">
    <div class="form-header">
        <h1>Commander ce véhicule</h1>
        <a href="{{ path('app_vehicules_show', {'id': vehicule.id}) }}" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Retour au véhicule
        </a>
    </div>

    <div class="order-summary">
        <div class="vehicule-card">
            <div class="vehicule-image">
                {% if vehicule.pictures is not empty %}
                    <img src="{{ asset('uploads/vehicules/' ~ vehicule.pictures.first.name) }}" 
                         alt="{{ vehicule.brand }} {{ vehicule.model }}">
                {% else %}
                    <div class="no-image">
                        <i class="fas fa-car"></i>
                        <span>Aucune image</span>
                    </div>
                {% endif %}
            </div>
            <div class="vehicule-info">
                <h3>{{ vehicule.brand }} {{ vehicule.model }}</h3>
                <p class="vehicule-year">{{ vehicule.year|date('Y') }} - {{ vehicule.mileage|number_format(0, ',', ' ') }} km</p>
                <div class="vehicule-specs">
                    <span class="spec">{{ vehicule.fuelType }}</span>
                    <span class="spec">{{ vehicule.trasmission }}</span>
                    <span class="spec">{{ vehicule.color }}</span>
                </div>
                <div class="vehicule-price">
                    <span class="price">{{ (vehicule.salePrice / 100)|number_format(2, ',', ' ') }} €</span>
                </div>
            </div>
        </div>
    </div>

    <div class="form-content">
        {{ form_start(form) }}
            <div class="form-section">
                <h3>Informations de livraison</h3>
                <div class="form-row">
                    <div class="form-group">
                        {{ form_label(form.deliveryAdress, 'Adresse de livraison') }}
                        {{ form_widget(form.deliveryAdress, {'attr': {'class': 'form-control', 'placeholder': '123 Rue de la Paix'}}) }}
                        {{ form_errors(form.deliveryAdress) }}
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        {{ form_label(form.deliveryPostalCode, 'Code postal') }}
                        {{ form_widget(form.deliveryPostalCode, {'attr': {'class': 'form-control', 'placeholder': '75001'}}) }}
                        {{ form_errors(form.deliveryPostalCode) }}
                    </div>
                    <div class="form-group">
                        {{ form_label(form.deliveryCity, 'Ville') }}
                        {{ form_widget(form.deliveryCity, {'attr': {'class': 'form-control', 'placeholder': 'Paris'}}) }}
                        {{ form_errors(form.deliveryCity) }}
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        {{ form_label(form.deliveryCountry, 'Pays') }}
                        {{ form_widget(form.deliveryCountry, {'attr': {'class': 'form-control'}}) }}
                        {{ form_errors(form.deliveryCountry) }}
                    </div>
                </div>
            </div>

            <div class="form-section">
                <h3>Récapitulatif de la commande</h3>
                <div class="order-summary-details">
                    <div class="summary-item">
                        <span class="summary-label">Véhicule :</span>
                        <span class="summary-value">{{ vehicule.brand }} {{ vehicule.model }}</span>
                    </div>
                    <div class="summary-item">
                        <span class="summary-label">Prix :</span>
                        <span class="summary-value price">{{ (vehicule.salePrice / 100)|number_format(2, ',', ' ') }} €</span>
                    </div>
                    <div class="summary-item">
                        <span class="summary-label">Client :</span>
                        <span class="summary-value">{{ app.user.firstName }} {{ app.user.lastName }}</span>
                    </div>
                </div>
            </div>

            <div class="form-actions">
                <!-- Bouton Apple Pay -->
                <div class="apple-pay-button" id="apple-pay-button" style="display: none;">
                    <button type="button" class="btn btn-apple-pay btn-lg" onclick="initiateApplePayPurchase()">
                        <i class="fab fa-apple-pay"></i> Acheter avec Apple Pay
                    </button>
                </div>
                
                <!-- Bouton Stripe classique -->
                <button type="submit" class="btn btn-primary btn-lg" id="stripe-pay-button">
                    <i class="fas fa-credit-card"></i> Procéder au paiement
                </button>
                
                <a href="{{ path('app_vehicules_show', {'id': vehicule.id}) }}" class="btn btn-secondary">
                    <i class="fas fa-times"></i> Annuler
                </a>
            </div>
        {{ form_end(form) }}
    </div>
</div>

<!-- Loading overlay -->
<div id="loadingOverlay" class="loading-overlay" style="display: none;">
    <div class="loading-content">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Chargement...</span>
        </div>
        <p>Traitement du paiement...</p>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        // Initialiser Stripe
        const stripe = Stripe('{{ stripe_public_key }}');
        let applePaySupported = false;
        const vehiculeData = {
            id: {{ vehicule.id }},
            brand: '{{ vehicule.brand }}',
            model: '{{ vehicule.model }}',
            price: {{ vehicule.salePrice }}, // en centimes
            priceFormatted: '{{ (vehicule.salePrice / 100)|number_format(2, ',', ' ') }} €'
        };

        // Vérifier si Apple Pay est disponible
        function checkApplePayAvailability() {
            if (window.ApplePaySession && ApplePaySession.canMakePayments()) {
                applePaySupported = true;
                document.getElementById('apple-pay-button').style.display = 'block';
                // Masquer le bouton Stripe classique si Apple Pay est disponible
                document.getElementById('stripe-pay-button').style.display = 'none';
            }
        }

        // Initialiser Apple Pay pour l'achat direct
        function initializeApplePayForPurchase() {
            const paymentRequest = stripe.paymentRequest({
                country: 'FR',
                currency: 'eur',
                total: {
                    label: 'Quernel Auto - ' + vehiculeData.brand + ' ' + vehiculeData.model,
                    amount: vehiculeData.price, // en centimes
                },
                requestPayerName: true,
                requestPayerEmail: true,
                requestPayerPhone: true,
                requestShipping: true,
            });

            // Gérer la confirmation du paiement
            paymentRequest.on('paymentmethod', async (event) => {
                try {
                    showLoading();
                    
                    // Créer la commande et le PaymentIntent
                    const response = await fetch('{{ path('app_orders_create_with_apple_pay') }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify({
                            vehicule_id: vehiculeData.id,
                            payment_method: event.paymentMethod.id,
                            shipping_address: event.paymentMethod.billing_details,
                            delivery_address: event.paymentMethod.shipping_address
                        })
                    });

                    const data = await response.json();
                    
                    if (data.error) {
                        throw new Error(data.error);
                    }

                    // Confirmer le paiement
                    const {error: confirmError} = await stripe.confirmCardPayment(
                        data.client_secret,
                        {
                            payment_method: event.paymentMethod.id,
                        },
                        {
                            handleActions: false,
                        }
                    );

                    if (confirmError) {
                        throw new Error(confirmError.message);
                    }

                    // Paiement réussi
                    hideLoading();
                    window.location.href = '{{ path('app_vehicules_purchase_success') }}?vehicule_id=' + vehiculeData.id;

                } catch (error) {
                    console.error('Erreur Apple Pay:', error);
                    hideLoading();
                    showError('Erreur lors du paiement Apple Pay: ' + error.message);
                }
            });

            // Gérer les erreurs
            paymentRequest.on('cancel', () => {
                console.log('Paiement Apple Pay annulé');
                hideLoading();
            });

            return paymentRequest;
        }

        // Fonction pour initier Apple Pay
        function initiateApplePayPurchase() {
            const paymentRequest = initializeApplePayForPurchase();
            
            if (paymentRequest) {
                paymentRequest.show();
            } else {
                showError('Apple Pay n\'est pas disponible sur votre appareil');
            }
        }

        // Fonction pour afficher le loading
        function showLoading() {
            document.getElementById('loadingOverlay').style.display = 'flex';
        }

        // Fonction pour masquer le loading
        function hideLoading() {
            document.getElementById('loadingOverlay').style.display = 'none';
        }

        // Fonction pour afficher les erreurs
        function showError(message) {
            const alertDiv = document.createElement('div');
            alertDiv.className = 'alert alert-danger alert-dismissible fade show';
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;
            
            const container = document.querySelector('.form-container');
            container.insertBefore(alertDiv, container.firstChild);
        }

        // Initialiser au chargement de la page
        document.addEventListener('DOMContentLoaded', function() {
            checkApplePayAvailability();
        });
    </script>
{% endblock %} 